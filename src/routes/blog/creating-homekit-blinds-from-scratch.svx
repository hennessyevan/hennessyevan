---
title: Creating Homekit Blinds from Scratch
date: 2018-04-27
---

A journey through thread and wire¬†:: AKA the coolest thing you could‚Äôve had in the 90s.

<figure>

![](https://cdn-images-1.medium.com/max/800/1*Zghksr01PYggRQXj6TuXfA.gif)

<figcaption class="imageCaption">Custom Homekit Enabled¬†Blinds</figcaption>

</figure>

## **Motivation**

I built roman blinds from scratch for my home office last year. These blinds sit behind my two computer monitors and while I got a custom aesthetic out of it, the position and mechanism left much to be desired in terms of usability. It sounds like a whine but I would just leave the blinds up all the time to save the hassle of climbing behind my monitors to reach the drawcord.

### Content

1.  [The Blinds](https://medium.com/p/36ebed31e3e8#4a00)
2.  [The Hardware](https://medium.com/p/36ebed31e3e8#12fc)
3.  [The Software](https://medium.com/p/36ebed31e3e8#a8db)
4.  [Retro-fitting](https://medium.com/p/36ebed31e3e8#b7e9)
5.  [Final Thoughts](https://medium.com/p/36ebed31e3e8#2c01)

## The Blinds

<figure>

![](https://cdn-images-1.medium.com/max/600/1*Erv3JCrVOjUFlpplm1Enzw.jpeg)

</figure>

I bought fabric from Fabricland that went with the general feel of the room. It‚Äôs an old-timey fabric used in a minimalist roman-blind shape to bring it into this century; it also has a warmth to it that is well needed in my otherwise black, white and gray office.

Measuring the fabric to the window size with an extra 2 inches I sewed the edges over and behind the blinds fabric. I then divided the blinds into 4 sections and sewed/glued dowel rods on those lines; this is where I would attach the strings later on. I added more dowels in between those areas to help create even folds and stringing three lines of cord from the bottom through the main dowels to the top bar I had the main structure complete. When I had first built these blinds I installed a standard cord-lock but for the motorized version I would undo that mechanism to this point.

## The Hardware

- Raspberry PI 3 Model B
- Double Relay
- 12V/2A transformer PSU
- 12V High-Torque Electric Motor
- Wire

Now, early on I had been using a digital servo because of the relative hardware simplicity compared to what I perceived the relay+motor setup to be; I wouldn‚Äôt suggest that if you‚Äôre looking to lift/lower any blinds other than those extremely light cloth blinds.

For the analog motor setup I chose to use a double-relay because relays (while they‚Äôre not solid state and thus potentially susceptible to mechanical failure) are able to withstand much higher voltage for longer than a transistor or switch, etc..

<figure >

![](https://cdn-images-1.medium.com/max/800/1*3eRZZu6s8iI3wQf0dog-Rw.png)

</figure>

The two relays receive the same voltage power but switch the polarity given to the motor by which side of the motor‚Äôs lead is getting power which allows for directional control over the motor depending on which relay circuit is closed by the Raspberry PI. I used jumper wires and soldered some telephone wire for the motor-to-relay and power-to-relay connections.

## The Software

<figure>

![](https://cdn-images-1.medium.com/max/600/1*oWH3_cWm6qsfkAX58s2Xgw.jpeg)

</figure>

Part of the reason I knew I could complete this project is that there is already pretty darn good, unofficial, HomeKit support for linux devices such as Raspberry PI and Arduino. It comes in a Node module from [Nick Farina](https://medium.com/u/c20e825b334a) (and contributors) called [homebridge](https://github.com/nfarina/homebridge) which is open source and has plenty of community implementations around Github. The other great part is that it is a NodeJS server, a technology I‚Äôm all too familiar with. Installation was a breeze and there is great documentation in the repo if you‚Äôre interested.

When I was proving the concept for these blinds, there was no homebridge implementation for servo-powered blinds so I wrote my own. Once I realized my \$3 servo or any other servo wasn‚Äôt going to be as efficient, capable or quiet as the 12V motor I resorted to, I stumbled on an open-source [homebridge plugin](https://github.com/rsporny/homebridge-gpio-blinds) that was written to enable HomeKit Support on already-motorized ‚Äúdumb-blinds‚Äù from [Rados≈Çaw Sporny](https://github.com/rsporny). He too was using relays to control his analog motors so with only a little of my own tweaking to his code, I now had control of the motor.

### Retro-fitting

The drawstring mechanism I had before wasn‚Äôt going to cut it. Even if I had simply wound the usually hand-pulled drawstring around a wheel I would be losing too much torque from the string buildup around the wheel. I removed the mechanism and grabbed another dowel this time drilling holes to feed the three lines through. After some shimming and fitting I had the motor installed on one end of the dowel-shaft and a ring-guide holding the other teflon-wrapped end. This ring actually broke and so I replaced it with a holder drilled out of MDF.

<figure>

![](https://cdn-images-1.medium.com/max/800/1*zZ3rer2ibE2gtR3eAPotmw.gif)

<figcaption>The retro-fitted dowel-joiner!</figcaption>

</figure>

_At this point, I re-installed the blinds to my window and simply adjusted the timings for the lifting and lowering of the blinds and was finally done!_

One of the biggest benefits of the mechanism being housed behind the topmost section of the blind is that it‚Äôs hidden from view with only a white lead running down the side of the window for power to the motor.

## Final Thoughts

I always relish seeing a project through from start to finish. This one in particular was a unique opportunity for me to do just that and I would do it again. Now I‚Äôm looking for other things to automate üòé.

I would recommend this DIY project to anyone with basic node experience
